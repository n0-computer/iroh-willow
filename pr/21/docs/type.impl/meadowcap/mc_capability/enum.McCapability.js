(function() {
    var type_impls = Object.fromEntries([["iroh_willow",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-Clone-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    NamespaceSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Encodable,\n    UserPublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    UserSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Encodable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(\n    &amp;self,\n) -&gt; McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-Debug-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    NamespaceSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserPublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    UserSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-Hash-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    NamespaceSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserPublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    UserSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    UserPublicKey: SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    NamespaceSignature: Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserSignature: Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_communal\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_communal</a>(\n    namespace_key: NamespacePublicKey,\n    user_key: UserPublicKey,\n    access_mode: <a class=\"enum\" href=\"iroh_willow/proto/meadowcap/enum.AccessMode.html\" title=\"enum iroh_willow::proto::meadowcap::AccessMode\">AccessMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, NamespaceIsNotCommunalError&lt;NamespacePublicKey&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new communal capability granting access to the [<code>SubspaceId</code>] corresponding to the given <code>UserPublicKey</code>, or return an error if the namespace key is not communal.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_owned\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_owned</a>&lt;NamespaceSecret&gt;(\n    namespace_key: NamespacePublicKey,\n    namespace_secret: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;NamespaceSecret</a>,\n    user_key: UserPublicKey,\n    access_mode: <a class=\"enum\" href=\"iroh_willow/proto/meadowcap/enum.AccessMode.html\" title=\"enum iroh_willow::proto::meadowcap::AccessMode\">AccessMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, OwnedCapabilityCreationError&lt;NamespacePublicKey&gt;&gt;<div class=\"where\">where\n    NamespaceSecret: Signer&lt;NamespaceSignature&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Create a new owned capability granting access to the <a href=\"https://willowprotocol.org/specs/grouping-entries/index.html#full_area\">full area</a> of the <a href=\"https://willowprotocol.org/specs/data-model/index.html#namespace\">namespace</a> to the given <code>UserPublicKey</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.access_mode\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">access_mode</a>(&amp;self) -&gt; <a class=\"enum\" href=\"iroh_willow/proto/meadowcap/enum.AccessMode.html\" title=\"enum iroh_willow::proto::meadowcap::AccessMode\">AccessMode</a></h4></section></summary><div class=\"docblock\"><p>The kind of access this capability grants.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receiver\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">receiver</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;UserPublicKey</a></h4></section></summary><div class=\"docblock\"><p>The user to whom this capability grants access.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.granted_namespace\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">granted_namespace</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;NamespacePublicKey</a></h4></section></summary><div class=\"docblock\"><p>The <a href=\"https://willowprotocol.org/specs/data-model/index.html#namespace\">namespace</a> for which this capability grants access.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.granted_area\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">granted_area</a>(&amp;self) -&gt; Area&lt;MCL, MCC, MPL, UserPublicKey&gt;</h4></section></summary><div class=\"docblock\"><p>The [<code>Area</code>] for which this capability grants access.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delegations\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">delegations</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Return a slice of all [<code>Delegation</code>]s made to this capability.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delegations_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">delegations_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of delegations present on this capability.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.progenitor\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">progenitor</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;UserPublicKey</a></h4></section></summary><div class=\"docblock\"><p>Return the public key of the very first user this capability was issued to.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delegate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">delegate</a>&lt;UserSecretKey&gt;(\n    &amp;self,\n    secret_key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;UserSecretKey</a>,\n    new_user: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;UserPublicKey</a>,\n    new_area: &amp;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, FailedDelegationError&lt;MCL, MCC, MPL, UserPublicKey&gt;&gt;<div class=\"where\">where\n    UserSecretKey: Signer&lt;UserSignature&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Delegate this capability to a new <code>UserPublicKey</code> for a given [<code>willow_data_model::grouping::Area</code>].\nWill fail if the area is not included by this capability’s granted area, or if the given secret key does not correspond to the capability’s receiver.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_existing_delegation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append_existing_delegation</a>(\n    &amp;mut self,\n    delegation: Delegation&lt;MCL, MCC, MPL, UserPublicKey, UserSignature&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, InvalidDelegationError&lt;MCL, MCC, MPL, UserPublicKey, UserSignature&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Append an existing delegation to an existing capability, or return an error if the delegation is invalid.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorisation_token_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">authorisation_token_unchecked</a>&lt;UserSecret, PD&gt;(\n    &amp;self,\n    entry: Entry&lt;MCL, MCC, MPL, NamespacePublicKey, UserPublicKey, PD&gt;,\n    secret: UserSecret,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McAuthorisationToken&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, NotAWriteCapabilityError&gt;<div class=\"where\">where\n    UserSecret: Signer&lt;UserSignature&gt;,\n    PD: PayloadDigest + Encodable,</div></h4></section></summary><div class=\"docblock\"><p>Return a new AuthorisationToken without checking if the resulting signature is correct (e.g. because you are going to immediately do that by constructing an [<code>willow_data_model::AuthorisedEntry</code>]).</p>\n<h6 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h6>\n<p>This function must be called with this capability’s <a href=\"https://willowprotocol.org/specs/meadowcap/index.html#communal_cap_receiver\">receiver</a>’s corresponding secret key, or a token with an incorrect signature will be produced.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorisation_token\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorisation_token</a>&lt;UserSecret, PD&gt;(\n    &amp;self,\n    entry: &amp;Entry&lt;MCL, MCC, MPL, NamespacePublicKey, UserPublicKey, PD&gt;,\n    secret: UserSecret,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McAuthorisationToken&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, <a class=\"enum\" href=\"https://docs.rs/either/1/either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;NotAWriteCapabilityError, Error&gt;&gt;<div class=\"where\">where\n    UserSecret: Signer&lt;UserSignature&gt;,\n    PD: PayloadDigest + Encodable,</div></h4></section></summary><div class=\"docblock\"><p>Return a new [<code>McAuthorisationToken</code>], or an error if the resulting signature was not for the capability’s receiver.</p>\n</div></details></div></details>",0,"iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    NamespaceSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserPublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    UserSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(\n    &amp;self,\n    other: &amp;McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeDecodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-RelativeDecodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; RelativeDecodable&lt;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;&gt; for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: NamespaceId + Encodable + Decodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    UserPublicKey: SubspaceId + Encodable + Decodable + Verifier&lt;UserSignature&gt;,\n    NamespaceSignature: Encodable + Decodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserSignature: Encodable + Decodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_decode\" class=\"method trait-impl\"><a href=\"#method.relative_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">relative_decode</a>&lt;Producer&gt;(\n    out: &amp;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;,\n    producer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Producer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, DecodeError&lt;&lt;Producer as Producer&gt;::Error&gt;&gt;<div class=\"where\">where\n    Producer: BulkProducer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decode a value (relative to a reference value) to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>.</div></details></div></details>","RelativeDecodable<Area<MCL, MCC, MPL, UserPublicKey>>","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeDecodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-RelativeDecodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; RelativeDecodable&lt;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;&gt; for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: NamespaceId + Encodable + Decodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    UserPublicKey: SubspaceId + Encodable + Decodable + Verifier&lt;UserSignature&gt;,\n    NamespaceSignature: Encodable + Decodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserSignature: Encodable + Decodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_decode\" class=\"method trait-impl\"><a href=\"#method.relative_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_decode</a>&lt;Producer&gt;(\n    out: &amp;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;,\n    producer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Producer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;, DecodeError&lt;&lt;Producer as Producer&gt;::Error&gt;&gt;<div class=\"where\">where\n    Producer: BulkProducer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decode a value (relative to a reference value) to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>.</div></details></div></details>","RelativeDecodable<Area<MCL, MCC, MPL, UserPublicKey>>","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEncodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-RelativeEncodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; RelativeEncodable&lt;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;&gt; for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: NamespaceId + Encodable + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    UserPublicKey: SubspaceId + Encodable + Encodable + Verifier&lt;UserSignature&gt;,\n    NamespaceSignature: Encodable + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserSignature: Encodable + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_encode\" class=\"method trait-impl\"><a href=\"#method.relative_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">relative_encode</a>&lt;Consumer&gt;(\n    &amp;self,\n    out: &amp;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;,\n    consumer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Consumer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;Consumer as Consumer&gt;::Error&gt;<div class=\"where\">where\n    Consumer: BulkConsumer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Encode a value (relative to a reference value) to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>.</div></details></div></details>","RelativeEncodable<Area<MCL, MCC, MPL, UserPublicKey>>","iroh_willow::proto::meadowcap::McCapability"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEncodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-RelativeEncodable%3CArea%3CMCL,+MCC,+MPL,+UserPublicKey%3E%3E-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; RelativeEncodable&lt;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;&gt; for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    UserPublicKey: SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    NamespaceSignature: Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserSignature: Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_encode\" class=\"method trait-impl\"><a href=\"#method.relative_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_encode</a>&lt;Consumer&gt;(\n    &amp;self,\n    out: &amp;Area&lt;MCL, MCC, MPL, UserPublicKey&gt;,\n    consumer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Consumer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;Consumer as Consumer&gt;::Error&gt;<div class=\"where\">where\n    Consumer: BulkConsumer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Encode a value (relative to a reference value) to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>.</div></details></div></details>","RelativeEncodable<Area<MCL, MCC, MPL, UserPublicKey>>","iroh_willow::proto::meadowcap::McCapability"],["<section id=\"impl-Eq-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-Eq-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    NamespaceSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserPublicKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    UserSignature: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section>","Eq","iroh_willow::proto::meadowcap::McCapability"],["<section id=\"impl-StructuralPartialEq-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-McCapability%3CMCL,+MCC,+MPL,+NamespacePublicKey,+NamespaceSignature,+UserPublicKey,+UserSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for McCapability&lt;MCL, MCC, MPL, NamespacePublicKey, NamespaceSignature, UserPublicKey, UserSignature&gt;<div class=\"where\">where\n    NamespacePublicKey: NamespaceId + Encodable + Verifier&lt;NamespaceSignature&gt; + <a class=\"trait\" href=\"iroh_willow/proto/meadowcap/trait.IsCommunal.html\" title=\"trait iroh_willow::proto::meadowcap::IsCommunal\">IsCommunal</a>,\n    UserPublicKey: SubspaceId + Encodable + Verifier&lt;UserSignature&gt;,\n    NamespaceSignature: Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    UserSignature: Encodable + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section>","StructuralPartialEq","iroh_willow::proto::meadowcap::McCapability"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[44898]}