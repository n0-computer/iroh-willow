(function() {
    var type_impls = Object.fromEntries([["iroh_willow",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Path&lt;MCL, MCC, MPL&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Decodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Decodable for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">decode</a>&lt;P&gt;(\n    producer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut P</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, DecodeError&lt;&lt;P as Producer&gt;::Error&gt;&gt;<div class=\"where\">where\n    P: BulkProducer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Decade a value to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>. <a>Read more</a></div></details></div></details>","Decodable","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Decodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Decodable for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;P&gt;(\n    producer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut P</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, DecodeError&lt;&lt;P as Producer&gt;::Error&gt;&gt;<div class=\"where\">where\n    P: BulkProducer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Decode a value to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>. <a>Read more</a></div></details></div></details>","Decodable","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Encodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Encodable for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">encode</a>&lt;C&gt;(\n    &amp;self,\n    consumer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut C</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;C as Consumer&gt;::Error&gt;<div class=\"where\">where\n    C: BulkConsumer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Encode a value to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>. <a>Read more</a></div></details></div></details>","Encodable","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Encodable-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Encodable for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>&lt;C&gt;(&amp;self, consumer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;C as Consumer&gt;::Error&gt;<div class=\"where\">where\n    C: BulkConsumer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Encode a value to a bytestring in a specific way that is best described over at <a href=\"https://willowprotocol.org/specs/encodings/index.html#encodings_what\">willowprotocol.org</a>. <a>Read more</a></div></details></div></details>","Encodable","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Ord-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"docblock\"><p>Compare paths lexicogrphically, since that is the path ordering that the Willow spec always uses.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Path&lt;MCL, MCC, MPL&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRangeEnd%3CPath%3CMCL,+MCC,+MPL%3E%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3CRangeEnd%3CPath%3CMCL,+MCC,+MPL%3E%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"iroh_willow/proto/grouping/enum.RangeEnd.html\" title=\"enum iroh_willow::proto::grouping::RangeEnd\">RangeEnd</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;&gt; for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"iroh_willow/proto/grouping/enum.RangeEnd.html\" title=\"enum iroh_willow::proto::grouping::RangeEnd\">RangeEnd</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<RangeEnd<Path<MCL, MCC, MPL>>>","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Path&lt;MCL, MCC, MPL&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRangeEnd%3CPath%3CMCL,+MCC,+MPL%3E%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-PartialOrd%3CRangeEnd%3CPath%3CMCL,+MCC,+MPL%3E%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"iroh_willow/proto/grouping/enum.RangeEnd.html\" title=\"enum iroh_willow::proto::grouping::RangeEnd\">RangeEnd</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;&gt; for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"iroh_willow/proto/grouping/enum.RangeEnd.html\" title=\"enum iroh_willow::proto::grouping::RangeEnd\">RangeEnd</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<RangeEnd<Path<MCL, MCC, MPL>>>","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-PartialOrd-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Path&lt;MCL, MCC, MPL&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_empty</a>() -&gt; Path&lt;MCL, MCC, MPL&gt;</h4></section></summary><div class=\"docblock\"><p>Construct an empty path, i.e., a path of zero components.</p>\n<h6 id=\"complexity\"><a class=\"doc-anchor\" href=\"#complexity\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_singleton\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_singleton</a>(\n    comp: Component&lt;'_, MCL&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, <a class=\"enum\" href=\"iroh_willow/proto/data_model/enum.InvalidPathError.html\" title=\"enum iroh_willow::proto::data_model::InvalidPathError\">InvalidPathError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a singleton path, i.e., a path of exactly one component.</p>\n<p>Copies the bytes of the component into an owned allocation on the heap.</p>\n<h6 id=\"complexity-1\"><a class=\"doc-anchor\" href=\"#complexity-1\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the length of the component. Performs a single allocation of <code>O(n)</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_from_iter</a>&lt;'a, I&gt;(\n    total_length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    iter: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, <a class=\"enum\" href=\"iroh_willow/proto/data_model/enum.InvalidPathError.html\" title=\"enum iroh_willow::proto::data_model::InvalidPathError\">InvalidPathError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a>&lt;Item = Component&lt;'a, MCL&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Construct a path of known total length from an <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\"><code>ExactSizeIterator</code></a> of components.</p>\n<p>Copies the bytes of the components into an owned allocation on the heap.</p>\n<p>Panics if the claimed <code>total_length</code> does not match the sum of the lengths of all the components.</p>\n<h6 id=\"complexity-2\"><a class=\"doc-anchor\" href=\"#complexity-2\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the path in bytes. Performs a single allocation of <code>O(n)</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_from_slice</a>(\n    components: &amp;[Component&lt;'_, MCL&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, <a class=\"enum\" href=\"iroh_willow/proto/data_model/enum.InvalidPathError.html\" title=\"enum iroh_willow::proto::data_model::InvalidPathError\">InvalidPathError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a path from a slice of components.</p>\n<p>Copies the bytes of the components into an owned allocation on the heap.</p>\n<h6 id=\"complexity-3\"><a class=\"doc-anchor\" href=\"#complexity-3\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the path in bytes. Performs a single allocation of <code>O(n)</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>(\n    &amp;self,\n    comp: Component&lt;'_, MCL&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, <a class=\"enum\" href=\"iroh_willow/proto/data_model/enum.InvalidPathError.html\" title=\"enum iroh_willow::proto::data_model::InvalidPathError\">InvalidPathError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new path by appending a component to this one.</p>\n<p>Creates a fully separate copy of the new data on the heap; this function is not more efficient than constructing the new path from scratch.</p>\n<h6 id=\"complexity-4\"><a class=\"doc-anchor\" href=\"#complexity-4\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the new path in bytes. Performs a single allocation of <code>O(n)</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append_slice</a>(\n    &amp;self,\n    components: &amp;[Component&lt;'_, MCL&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, <a class=\"enum\" href=\"iroh_willow/proto/data_model/enum.InvalidPathError.html\" title=\"enum iroh_willow::proto::data_model::InvalidPathError\">InvalidPathError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new path by appending a slice of components to this one.</p>\n<p>Creates a fully separate copy of the new data on the heap; this function is not more efficient than constructing the new path from scratch.</p>\n<h6 id=\"complexity-5\"><a class=\"doc-anchor\" href=\"#complexity-5\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the new path in bytes. Performs a single allocation of <code>O(n)</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_component_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_component_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the number of components in this path.</p>\n<p>Guaranteed to be at most <code>MCC</code>.</p>\n<h6 id=\"complexity-6\"><a class=\"doc-anchor\" href=\"#complexity-6\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return whether this path has zero components.</p>\n<h6 id=\"complexity-7\"><a class=\"doc-anchor\" href=\"#complexity-7\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_path_length\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_path_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the sum of the lengths of all components in this path.</p>\n<p>Guaranteed to be at most <code>MCC</code>.</p>\n<h6 id=\"complexity-8\"><a class=\"doc-anchor\" href=\"#complexity-8\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_component\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_component</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Component&lt;'_, MCL&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the <code>i</code>-th [<code>Component</code>] of this path.</p>\n<h6 id=\"complexity-9\"><a class=\"doc-anchor\" href=\"#complexity-9\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_owned_component\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_owned_component</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;OwnedComponent&lt;MCL&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get an owned handle to the <code>i</code>-th [<code>Component</code>] of this path.</p>\n<h6 id=\"complexity-10\"><a class=\"doc-anchor\" href=\"#complexity-10\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.components\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">components</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Create an iterator over the components of this path.</p>\n<p>Stepping the iterator takes <code>O(1)</code> time and performs no memory allocations.</p>\n<h6 id=\"complexity-11\"><a class=\"doc-anchor\" href=\"#complexity-11\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.suffix_components\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">suffix_components</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Create an iterator over the components of this path, starting at the <code>i</code>-th component. If <code>i</code> is greater than or equal to the number of components, the iterator yields zero items.</p>\n<p>Stepping the iterator takes <code>O(1)</code> time and performs no memory allocations.</p>\n<h6 id=\"complexity-12\"><a class=\"doc-anchor\" href=\"#complexity-12\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned_components\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">owned_components</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Create an iterator over owned handles to the components of this path.</p>\n<p>Stepping the iterator takes <code>O(1)</code> time and performs no memory allocations.</p>\n<h6 id=\"complexity-13\"><a class=\"doc-anchor\" href=\"#complexity-13\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.suffix_owned_components\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">suffix_owned_components</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Create an iterator over owned handles to the components of this path, starting at the <code>i</code>-th component. If <code>i</code> is greater than or equal to the number of components, the iterator yields zero items.</p>\n<p>Stepping the iterator takes <code>O(1)</code> time and performs no memory allocations.</p>\n<h6 id=\"complexity-14\"><a class=\"doc-anchor\" href=\"#complexity-14\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_prefix\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create_prefix</a>(&amp;self, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new path that consists of the first <code>length</code> components. More efficient than creating a new [<code>Path</code>] from scratch.</p>\n<p>Returns <code>None</code> if <code>length</code> is greater than <code>self.get_component_count()</code>.</p>\n<h6 id=\"complexity-15\"><a class=\"doc-anchor\" href=\"#complexity-15\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_prefix_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">create_prefix_unchecked</a>(\n    &amp;self,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; Path&lt;MCL, MCC, MPL&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new path that consists of the first <code>length</code> components. More efficient than creating a new [<code>Path</code>] from scratch.</p>\n<h6 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h6>\n<p>Undefined behaviour if <code>length</code> is greater than <code>self.get_component_count()</code>. May manifest directly, or at any later\nfunction invocation that operates on the resulting [<code>Path</code>].</p>\n<h6 id=\"complexity-16\"><a class=\"doc-anchor\" href=\"#complexity-16\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all_prefixes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">all_prefixes</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a></h4></section></summary><div class=\"docblock\"><p>Create an iterator over all prefixes of this path (including th empty path and the path itself).</p>\n<p>Stepping the iterator takes <code>O(1)</code> time and performs no memory allocations.</p>\n<h6 id=\"complexity-17\"><a class=\"doc-anchor\" href=\"#complexity-17\">§</a>Complexity</h6>\n<p>Runs in <code>O(1)</code>, performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_prefix_of\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_prefix_of</a>(&amp;self, other: &amp;Path&lt;MCL, MCC, MPL&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Test whether this path is a prefix of the given path.\nPaths are always a prefix of themselves, and the empty path is a prefix of every path.</p>\n<h6 id=\"complexity-18\"><a class=\"doc-anchor\" href=\"#complexity-18\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the shorter of the two paths. Performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_prefixed_by\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_prefixed_by</a>(&amp;self, other: &amp;Path&lt;MCL, MCC, MPL&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Test whether this path is prefixed by the given path.\nPaths are always a prefix of themselves.</p>\n<h6 id=\"complexity-19\"><a class=\"doc-anchor\" href=\"#complexity-19\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the shorter of the two paths. Performs no allocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.longest_common_prefix\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">longest_common_prefix</a>(\n    &amp;self,\n    other: &amp;Path&lt;MCL, MCC, MPL&gt;,\n) -&gt; Path&lt;MCL, MCC, MPL&gt;</h4></section></summary><div class=\"docblock\"><p>Return the longest common prefix of this path and the given path.</p>\n<h6 id=\"complexity-20\"><a class=\"doc-anchor\" href=\"#complexity-20\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the shorter of the two paths. Performs a single allocation to create the return value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.successor\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">successor</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Return the least path which is strictly greater than <code>self</code>, or return <code>None</code> if <code>self</code> is the greatest possible path.</p>\n<h6 id=\"complexity-21\"><a class=\"doc-anchor\" href=\"#complexity-21\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the shorter of the two paths. Performs a single allocation to create the return value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_but_not_prefixed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">greater_but_not_prefixed</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Path&lt;MCL, MCC, MPL&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Return the least path that is strictly greater than <code>self</code> and which is not prefixed by <code>self</code>, or <code>None</code> if no such path exists.</p>\n<h6 id=\"complexity-22\"><a class=\"doc-anchor\" href=\"#complexity-22\">§</a>Complexity</h6>\n<p>Runs in <code>O(n)</code>, where <code>n</code> is the total length of the shorter of the two paths. Performs a single allocation to create the return value.</p>\n</div></details></div></details>",0,"iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeDecodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-RelativeDecodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; RelativeDecodable&lt;Path&lt;MCL, MCC, MPL&gt;&gt; for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_decode\" class=\"method trait-impl\"><a href=\"#method.relative_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">relative_decode</a>&lt;Producer&gt;(\n    reference: &amp;Path&lt;MCL, MCC, MPL&gt;,\n    producer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Producer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, DecodeError&lt;&lt;Producer as Producer&gt;::Error&gt;&gt;<div class=\"where\">where\n    Producer: BulkProducer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    Path&lt;MCL, MCC, MPL&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Decode a path relative to this path.</p>\n<p><a href=\"https://willowprotocol.org/specs/encodings/index.html#enc_path_relative\">Definition</a></p>\n</div></details></div></details>","RelativeDecodable<Path<MCL, MCC, MPL>>","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeDecodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-RelativeDecodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; RelativeDecodable&lt;Path&lt;MCL, MCC, MPL&gt;&gt; for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_decode\" class=\"method trait-impl\"><a href=\"#method.relative_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_decode</a>&lt;Producer&gt;(\n    reference: &amp;Path&lt;MCL, MCC, MPL&gt;,\n    producer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Producer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Path&lt;MCL, MCC, MPL&gt;, DecodeError&lt;&lt;Producer as Producer&gt;::Error&gt;&gt;<div class=\"where\">where\n    Producer: BulkProducer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    Path&lt;MCL, MCC, MPL&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Decode a path relative to this path.</p>\n<p><a href=\"https://willowprotocol.org/specs/encodings/index.html#enc_path_relative\">Definition</a></p>\n</div></details></div></details>","RelativeDecodable<Path<MCL, MCC, MPL>>","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEncodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-RelativeEncodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; RelativeEncodable&lt;Path&lt;MCL, MCC, MPL&gt;&gt; for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_encode\" class=\"method trait-impl\"><a href=\"#method.relative_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">relative_encode</a>&lt;Consumer&gt;(\n    &amp;self,\n    reference: &amp;Path&lt;MCL, MCC, MPL&gt;,\n    consumer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Consumer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;Consumer as Consumer&gt;::Error&gt;<div class=\"where\">where\n    Consumer: BulkConsumer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Encode a path relative to another path.</p>\n<p><a href=\"https://willowprotocol.org/specs/encodings/index.html#enc_path_relative\">Definition</a></p>\n</div></details></div></details>","RelativeEncodable<Path<MCL, MCC, MPL>>","iroh_willow::proto::data_model::Path"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEncodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-RelativeEncodable%3CPath%3CMCL,+MCC,+MPL%3E%3E-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; RelativeEncodable&lt;Path&lt;MCL, MCC, MPL&gt;&gt; for Path&lt;MCL, MCC, MPL&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_encode\" class=\"method trait-impl\"><a href=\"#method.relative_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_encode</a>&lt;Consumer&gt;(\n    &amp;self,\n    reference: &amp;Path&lt;MCL, MCC, MPL&gt;,\n    consumer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Consumer</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;Consumer as Consumer&gt;::Error&gt;<div class=\"where\">where\n    Consumer: BulkConsumer&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Encode a path relative to another path.</p>\n<p><a href=\"https://willowprotocol.org/specs/encodings/index.html#enc_path_relative\">Definition</a></p>\n</div></details></div></details>","RelativeEncodable<Path<MCL, MCC, MPL>>","iroh_willow::proto::data_model::Path"],["<section id=\"impl-Eq-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Path%3CMCL,+MCC,+MPL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MCC: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const MPL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Path&lt;MCL, MCC, MPL&gt;</h3></section>","Eq","iroh_willow::proto::data_model::Path"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[67567]}